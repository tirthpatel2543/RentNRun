{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 209, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/table.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n))\nTable.displayName = \"Table\"\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n))\nTableHeader.displayName = \"TableHeader\"\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n))\nTableBody.displayName = \"TableBody\"\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableFooter.displayName = \"TableFooter\"\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className\n    )}\n    {...props}\n  />\n))\nTableRow.displayName = \"TableRow\"\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0\",\n      className\n    )}\n    {...props}\n  />\n))\nTableHead.displayName = \"TableHead\"\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\"p-4 align-middle [&:has([role=checkbox])]:pr-0\", className)}\n    {...props}\n  />\n))\nTableCell.displayName = \"TableCell\"\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nTableCaption.displayName = \"TableCaption\"\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n}\n"],"names":[],"mappings":";;;;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,WAAU;kBACb,cAAA,8OAAC;YACC,KAAK;YACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;YAC9C,GAAG,KAAK;;;;;;;;;;;AAIf,MAAM,WAAW,GAAG;AAEpB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAM,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,mBAAmB;QAAa,GAAG,KAAK;;;;;;AAEzE,YAAY,WAAW,GAAG;AAE1B,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,2DACA;QAED,GAAG,KAAK;;;;;;AAGb,YAAY,WAAW,GAAG;AAE1B,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG9B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,+EACA;QAED,GAAG,KAAK;;;;;;AAGb,SAAS,WAAW,GAAG;AAEvB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,oGACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,kDAAkD;QAC/D,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,6BAAe,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGlC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,sCAAsC;QACnD,GAAG,KAAK;;;;;;AAGb,aAAa,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 319, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/components/ui/textarea.tsx"],"sourcesContent":["import * as React from 'react';\n\nimport {cn} from '@/lib/utils';\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, React.ComponentProps<'textarea'>>(\n  ({className, ...props}, ref) => {\n    return (\n      <textarea\n        className={cn(\n          'flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm',\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  }\n);\nTextarea.displayName = 'Textarea';\n\nexport {Textarea};\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,yBAAW,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC9B,CAAC,EAAC,SAAS,EAAE,GAAG,OAAM,EAAE;IACtB,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,qTACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,SAAS,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 371, "column": 0}, "map": {"version":3,"sources":["file:///home/user/studio/src/app/store/rental/page.tsx"],"sourcesContent":["\n\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport { Card, CardContent, CardFooter } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { CheckCircle, ChevronRight, Printer, Send, XCircle } from \"lucide-react\";\nimport Link from \"next/link\";\nimport { useState, useEffect } from \"react\";\n\ninterface OrderLine {\n  id: number;\n  product: string;\n  description: string;\n  quantity: number;\n  unitPrice: number;\n  taxRate: number;\n  subtotal: number;\n}\n\nexport default function RentalOrderPage() {\n  const [orderLines, setOrderLines] = useState<OrderLine[]>([\n    { id: 1, product: '[FURN_8220] Computer', description: 'Computer', quantity: 1, unitPrice: 1500, taxRate: 15, subtotal: 1500 },\n  ]);\n\n  const [untaxedAmount, setUntaxedAmount] = useState(0);\n  const [taxAmount, setTaxAmount] = useState(0);\n  const [total, setTotal] = useState(0);\n\n  useEffect(() => {\n    let newUntaxedAmount = 0;\n    let newTaxAmount = 0;\n\n    const updatedOrderLines = orderLines.map(line => {\n      const newSubtotal = line.quantity * line.unitPrice;\n      newUntaxedAmount += newSubtotal;\n      newTaxAmount += newSubtotal * (line.taxRate / 100);\n      return { ...line, subtotal: newSubtotal };\n    });\n\n    setUntaxedAmount(newUntaxedAmount);\n    setTaxAmount(newTaxAmount);\n    setTotal(newUntaxedAmount + newTaxAmount);\n    \n    if (JSON.stringify(orderLines) !== JSON.stringify(updatedOrderLines)) {\n        setOrderLines(updatedOrderLines);\n    }\n  }, [orderLines]);\n\n  const handleOrderLineChange = (id: number, field: keyof OrderLine, value: any) => {\n    setOrderLines(prevLines =>\n      prevLines.map(line =>\n        line.id === id ? { ...line, [field]: value } : line\n      )\n    );\n  };\n  \n  const addProduct = () => {\n    const newId = orderLines.length > 0 ? Math.max(...orderLines.map(l => l.id)) + 1 : 1;\n    setOrderLines([...orderLines, { id: newId, product: '', description: '', quantity: 1, unitPrice: 0, taxRate: 15, subtotal: 0 }]);\n  };\n\n\n  return (\n    <div className=\"p-4 md:p-8 bg-gray-50\">\n      <div className=\"flex flex-col md:flex-row items-start md:items-center justify-between mb-6 gap-4\">\n        <h1 className=\"text-xl md:text-2xl font-bold text-gray-800\">Rental Orders / S00018</h1>\n      </div>\n\n      <div className=\"flex flex-wrap items-center gap-2 mb-6\">\n        <Button variant=\"outline\" size=\"sm\" className=\"flex-grow md:flex-grow-0\"><Send className=\"mr-2 h-4 w-4\" /> Send by Email</Button>\n        <Button variant=\"outline\" size=\"sm\" className=\"flex-grow md:flex-grow-0\"><Printer className=\"mr-2 h-4 w-4\" /> Print</Button>\n        <Link href=\"/store\">\n            <Button variant=\"destructive\" size=\"sm\" className=\"flex-grow md:flex-grow-0\"><XCircle className=\"mr-2 h-4 w-4\" /> Cancel</Button>\n        </Link>\n      </div>\n\n      <div className=\"flex flex-col md:flex-row items-center justify-between p-4 mb-6 bg-white border rounded-lg gap-4\">\n        <div className=\"flex items-center gap-2\">\n            <div className=\"flex items-center justify-center w-8 h-8 font-bold text-white bg-primary rounded-full\">1</div>\n            <span className=\"font-semibold text-primary\">Quotation</span>\n        </div>\n        <ChevronRight className=\"text-gray-400 hidden md:block\" />\n        <div className=\"flex items-center gap-2 text-gray-500\">\n           <div className=\"flex items-center justify-center w-8 h-8 font-bold border-2 border-gray-400 rounded-full\">2</div>\n           <span>Quotation Sent</span>\n        </div>\n        <ChevronRight className=\"text-gray-400 hidden md:block\" />\n        <div className=\"flex items-center gap-2 text-gray-500\">\n            <div className=\"flex items-center justify-center w-8 h-8 font-bold border-2 border-gray-400 rounded-full\">3</div>\n            <span>Rental Order</span>\n        </div>\n      </div>\n\n      <Card>\n        <CardContent className=\"p-4 md:p-6\">\n          <div className=\"grid grid-cols-1 md:grid-cols-2 gap-8\">\n            <div>\n              <Label htmlFor=\"customer\">Customer</Label>\n              <Input id=\"customer\" defaultValue=\"Abellio\" />\n            </div>\n            <div>\n                {/* Placeholder for alignment */}\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                    <Label htmlFor=\"invoice-address\">Invoice Address</Label>\n                    <Textarea id=\"invoice-address\" rows={3} defaultValue=\"Abellio\\n24, New Street, New York, USA\" />\n                </div>\n                 <div>\n                    <Label htmlFor=\"delivery-address\">Delivery Address</Label>\n                    <Textarea id=\"delivery-address\" rows={3} defaultValue=\"Abellio\\n24, New Street, New York, USA\" />\n                </div>\n            </div>\n            <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4\">\n                <div>\n                    <Label htmlFor=\"quotation-date\">Quotation Date</Label>\n                    <Input id=\"quotation-date\" type=\"date\" defaultValue=\"2024-03-22\" />\n                </div>\n                 <div>\n                    <Label htmlFor=\"payment-terms\">Payment Terms</Label>\n                    <Input id=\"payment-terms\" defaultValue=\"Immediate Payment\" />\n                </div>\n            </div>\n          </div>\n\n          <div className=\"mt-8\">\n            <Table>\n              <TableHeader>\n                <TableRow>\n                  <TableHead>Product</TableHead>\n                  <TableHead className=\"hidden sm:table-cell\">Description</TableHead>\n                  <TableHead>Quantity</TableHead>\n                  <TableHead>Unit Price</TableHead>\n                  <TableHead className=\"hidden sm:table-cell\">Taxes (%)</TableHead>\n                  <TableHead className=\"text-right\">Subtotal</TableHead>\n                </TableRow>\n              </TableHeader>\n              <TableBody>\n                {orderLines.map((line) => (\n                  <TableRow key={line.id}>\n                    <TableCell>\n                      <Input\n                        value={line.product}\n                        onChange={(e) => handleOrderLineChange(line.id, 'product', e.target.value)}\n                        className=\"w-full\"\n                      />\n                    </TableCell>\n                    <TableCell className=\"hidden sm:table-cell\">\n                      <Input\n                          value={line.description}\n                          onChange={(e) => handleOrderLineChange(line.id, 'description', e.target.value)}\n                          className=\"w-full\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                      <Input\n                          type=\"number\"\n                          value={line.quantity}\n                          onChange={(e) => handleOrderLineChange(line.id, 'quantity', parseFloat(e.target.value) || 0)}\n                          className=\"w-20\"\n                        />\n                    </TableCell>\n                    <TableCell>\n                       <Input\n                          type=\"number\"\n                          value={line.unitPrice}\n                          onChange={(e) => handleOrderLineChange(line.id, 'unitPrice', parseFloat(e.target.value) || 0)}\n                          className=\"w-28\"\n                        />\n                    </TableCell>\n                    <TableCell className=\"hidden sm:table-cell\">\n                       <Input\n                          type=\"number\"\n                          value={line.taxRate}\n                          onChange={(e) => handleOrderLineChange(line.id, 'taxRate', parseFloat(e.target.value) || 0)}\n                          className=\"w-20\"\n                        />\n                    </TableCell>\n                    <TableCell className=\"text-right\">${line.subtotal.toFixed(2)}</TableCell>\n                  </TableRow>\n                ))}\n              </TableBody>\n            </Table>\n             <Button variant=\"link\" className=\"mt-2 px-0\" onClick={addProduct}>+ Add a product</Button>\n          </div>\n\n          <div className=\"flex justify-end mt-8\">\n            <div className=\"w-full md:w-1/2 lg:w-1/3\">\n              <div className=\"flex justify-between py-2\">\n                <span className=\"text-muted-foreground\">Untaxed Amount:</span>\n                <span className=\"font-semibold\">${untaxedAmount.toFixed(2)}</span>\n              </div>\n              <div className=\"flex justify-between py-2\">\n                <span className=\"text-muted-foreground\">Taxes:</span>\n                <span className=\"font-semibold\">${taxAmount.toFixed(2)}</span>\n              </div>\n              <div className=\"flex justify-between py-4 border-t-2\">\n                <span className=\"text-lg font-bold\">Total:</span>\n                <span className=\"text-lg font-bold\">${total.toFixed(2)}</span>\n              </div>\n            </div>\n          </div>\n          \n           <div className=\"mt-8\">\n            <Label htmlFor=\"terms\">Terms and Conditions</Label>\n            <Textarea id=\"terms\" rows={3} />\n          </div>\n\n        </CardContent>\n        <CardFooter className=\"flex justify-end p-4 md:p-6\">\n            <Link href=\"/store/rental/quotation-sent\">\n                <Button>\n                    Proceed to Quotation <ChevronRight className=\"ml-2 h-4 w-4\" />\n                </Button>\n            </Link>\n        </CardFooter>\n      </Card>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}